document.addEventListener("DOMContentLoaded", function() {
	checkConnexion();
    gestionHeaderGlobal.init();
});

const gestionHeaderGlobal = {
    init : function() {
        this.addInformationToheader();
    },
    addInformationToheader : function() {

        window.addEventListener('tagco-loaded', function () {
        
            //call server
            function ajax(url, callback) {
                var xmlhttp;
                // compatible with IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
                xmlhttp.onreadystatechange = function () {
                    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                        callback(xmlhttp.responseText);
                    }
                }
                xmlhttp.open("GET", url, true);
                xmlhttp.send();
            }
            //Update header info
            updateHeaderInfo(globalUserData);
            
        });


        function showCount() {
            if (window.cartModificationTime == undefined)
                window.cartModificationTime = 0;
            var suffix = '';
            if (typeof EBK != 'undefined') {
                suffix = EBK.config.contextPath;
            }
            $.ajax({
                url: suffix + '/cart/cartlayer',
                cache: false,
                type: 'GET',
                data: {
                    estimate: "false",
                    time: window.cartModificationTime
                },
                success: function (result) {
                    if (result) {
                        window.minicart = $.trim(result);
                        if (window.innerWidth > 767) {
                            $('#cartLayer').html(window.minicart);
                        }
                        //updateCartItemsCount($('#cartLayer').find('#cartEntryCount').val());
                        // myLazyLoad.update();
                    }
                }
            });
        }
    }
};

function updateHeaderInfo(userData) {

    //get concerned div
    var userFirstName = document.querySelectorAll('.connected-user-name')[0];
    var userNbrProducts = document.querySelectorAll('.cart_nb_products')[0];
    var userStatus = document.querySelectorAll('.user-status')[0];
    var headerNec = document.querySelectorAll('.header-nec-head')[0];
    var headerNecContent = document.querySelectorAll('.header-nec-content')[0];
    var headerFirstName = document.querySelectorAll('.header-nec-head .nec-user-firstname')[0];
    var headerInitials = document.querySelectorAll('.header-nec-head .nec-user-init')[0];
    var necUserName = document.querySelectorAll('.nec-user-name');
    var necUserFirstName = document.querySelectorAll('.nec-user-firstname')[0];
    var necUseremail = document.querySelectorAll('.nec-user-mail')[0];
    var accountOn = document.querySelectorAll('.account-on')[0];
    var anonymousCnx = document.querySelectorAll('.anonymousCnx')[0];
    var accountOff = document.querySelectorAll('.account-off')[0];
    var necWishList = document.querySelectorAll('.nec-link-wishlist')[0];
    var switchedPopin = document.querySelectorAll('[data-switch-view]');
    var popinInReexNotActivated = localStorage.getItem("popinIgnored");
    
    if (userData) {
        var user = userData;
        var isDesktop = tc_vars['nom_site'] != 'site_mobile_boutique' && tc_vars['nom_site'] != 'site_mobile_pro';
        //if user hasn't the role 'ROLE_CUSTOMERGROUP' so append anonymous header
        var isPro = tc_vars['is_pro'];

        if (user.belongToCustomerGroup) {
            if (headerNec) {

                if (user.anonymous) {
                    if (anonymousCnx) {
                        anonymousCnx.style.display = 'inline-block';
                    }

                    isUserConnectedSwitch(false);
                } else {

                    headerNec.classList.add('isConnected');


                    isUserConnectedSwitch(true)
                    if (headerFirstName) headerFirstName.innerText = user.firstName;

                    if (headerInitials) headerInitials.innerText = user.firstName.toUpperCase().charAt(0) + user.lastName.toUpperCase().charAt(0);

                    if (necUserName) [...necUserName].map(userNameBlock => userNameBlock.innerText = user.firstName + ' ' + user.lastName)
                    
                    if (necUserFirstName) necUserFirstName.innerText = user.firstName;

                    if (necUseremail) necUseremail.innerText = user.email;
                   if (headerNecContent){
                    var headerBtnBorder = headerNecContent.querySelector('.btn-border');
                    if (headerBtnBorder) {
                        if (!isPro) {
                           headerBtnBorder.setAttribute('href', "/nec/edit/user");
                           headerBtnBorder.innerText = 'GÃ©rer mon Compte La Poste';
                        }
                    }

                    var headerSignout = headerNecContent.querySelector('.nec-signout');
                    if (headerSignout) headerSignout.style.display = 'inline-flex';
                        }
                    var hideIfConnected = document.querySelectorAll('.js-hide-connected');
                    if (hideIfConnected) {
                        for (var i = 0; i < hideIfConnected.length; i++) hideIfConnected[i].style.display = 'none';
                    }

                    var showBlockIfConnected = document.querySelectorAll('.js-show-block');
                    if (showBlockIfConnected) {
                        for (var i = 0; i < showBlockIfConnected.length; i++) showBlockIfConnected[i].style.display = 'block';
                    }

                    var showFlexIfConnected = document.querySelectorAll('.js-show-flex');
                    if (showFlexIfConnected) {
                        for (var i = 0; i < showFlexIfConnected.length; i++) showFlexIfConnected[i].style.display = 'flex';
                    }
                }
            } else {
                // if user is anonymous so append anonymous header
                if (user.anonymous) {
                    if (accountOn) {
                        accountOn.style.display = 'none';
                    }
                    if (accountOff) {
                        accountOff.style.display = 'inline-block';
                    }
                    // remove for-connected content
                    var connectedDoms = document.querySelectorAll('.for-connected');
                    for (var i = 0; i < connectedDoms.length; i++) {
                        connectedDoms[i].remove();
                    }
                    var anonymousDoms = document.querySelectorAll('.for-anonymous');
                    for (var i = 0; i < anonymousDoms.length; i++) {
                        anonymousDoms[i].style.display = 'block';
                    }
                    var errorUserDoms = document.querySelectorAll('.for-errorUser');
                    for (var i = 0; i < errorUserDoms.length; i++) {
                        errorUserDoms[i].remove();
                    }

                    var dataSwitchViews = document.querySelectorAll('[data-switch-view]');
                    for (var i = 0; i < dataSwitchViews.length; i++) {
                        if (user.cartTotalUnitCount > 0) {
                            dataSwitchViews[i].setAttribute('data-switch-view', 'true');
                        } else {
                            dataSwitchViews[i].setAttribute('data-switch-view', 'false');
                        }
                    }
                    if (!isDesktop) {
                        var userConnected = document.getElementById("userConnected");
                        var userNotConnected = document.getElementById("userNotConnected");
                        if (userNotConnected != null && userNotConnected !== undefined) {
                            document.getElementById("userNotConnected").style.display = "list-item";
                        }
                        if (userConnected != null && userConnected !== undefined) {
                            document.getElementById("userConnected").style.display = "none";
                        }
                    }
                } else {
                    if (userStatus) {
                        userStatus.classList.add('isConnected')
                    }
                    if (accountOn) {
                        accountOn.style.display = 'inline-block';
                    }
                    if (accountOff) {
                        accountOff.style.display = 'none';
                    }
                    //set firstname & lastname
                    if (userFirstName) {
                        var displayedNameOnHeader = user.firstName;
                        if (typeof EBK != 'undefined') {
                            if (EBK.config.isPro == "true") {
                                displayedNameOnHeader = user.title + " " + user.lastName;
                            }
                        } else {
                            console.error("Attention!!! EBK est undefined");
                        }
                        userFirstName.innerText = (displayedNameOnHeader.length > 10 ? displayedNameOnHeader.substring(0, 10) + "..." : displayedNameOnHeader);
                    }

                    // remove for-connected content
                    var anonymousDoms = document.querySelectorAll('.for-anonymous');
                    for (var i = 0; i < anonymousDoms.length; i++) {
                        anonymousDoms[i].remove();
                    }
                    var connectedDoms = document.querySelectorAll('.for-connected');
                    for (var i = 0; i < connectedDoms.length; i++) {
                        connectedDoms[i].style.display = 'block';
                    }
                    var errorUserDoms = document.querySelectorAll('.for-errorUser');
                    for (var i = 0; i < errorUserDoms.length; i++) {
                        errorUserDoms[i].remove();
                    }
                    var dataSwitchViews = document.querySelectorAll('[data-switch-view]');
                    for (var i = 0; i < dataSwitchViews.length; i++) {
                        dataSwitchViews[i].setAttribute('data-switch-view', 'true');
                    }
                    var welcome = document.getElementsByClassName("txtCapitalize");
                    if (welcome.length > 0) {
                        var firstLetterFN = user.firstName[0];
                        var restFirstName = user.firstName.slice(1).toLowerCase();

                        var firstLetterLN = user.lastName[0];
                        var restLastName = user.lastName.slice(1).toLowerCase();
                        welcome[0].innerHTML += firstLetterFN + restFirstName + ' ' + firstLetterLN + restLastName + ',';
                    }

                    if (!isDesktop) {
                        var userConnected = document.getElementById("userConnected");
                        var userNotConnected = document.getElementById("userNotConnected");
                        if (userConnected != null && userConnected !== undefined) {
                            document.getElementById("userConnected").style.display = "list-item";
                        }
                        if (userNotConnected != null && userNotConnected !== undefined) {
                            document.getElementById("userNotConnected").style.display = "none";
                        }
                    }

                    var connected = document.getElementsByClassName("uppCase bgYellow  bf-icon icon-account bold trigger af-icon");
                    if (connected.length > 0) {
                        connected[0].innerHTML = user.firstName + ' ' + user.lastName;
                        connected[0].style.visibility = 'visible';
                    }


                }
            }
            //set number of product on cart for anonymous or connected
            var cartTotalUnitCount = user.cartTotalUnitCount;
            if (userNbrProducts) {
                if(document.querySelector('.ph-active')){
                    let phCart = Object.create(AjaxNatif);
                    phCart.init(EBK.config.contextPath + '/ecom/api/cart', 'get', '', '');
                    phCart.callback = function(response) {
                        try{
                            let result = JSON.parse(response);
                            updateCart(result.unitCount ? result.unitCount : result.count , true)
                        } catch(e){
                            console.log(">>> Error >>>  /ecom/api/cart response format")
                        }
                    }
                    phCart.callbackError = function(errors) {
                        updateCart(0, true)
                    }
                } else {
                    updateCart(0)
                }
            }

        } else {
            // remove for-connected and for-anonymous content
            var connectedDoms = document.querySelectorAll('.for-connected');
            for (var i = 0; i < connectedDoms.length; i++) {
                connectedDoms[i].remove();
            }
            var anonymousDoms = document.querySelectorAll('.for-anonymous');
            for (var i = 0; i < anonymousDoms.length; i++) {
                anonymousDoms[i].remove();
            }
            var errorUserDoms = document.querySelectorAll('.for-errorUser');
            for (var i = 0; i < errorUserDoms.length; i++) {
                errorUserDoms[i].style.display = 'block';
            }
        }
    }

    function updateCart(phCount, isDoubleRun = false){

            if (window.innerWidth > 767) {
                userNbrProducts.innerText = ((parseInt(cartTotalUnitCount) + phCount) > 999 ? "+999" : (parseInt(cartTotalUnitCount) + phCount));
            } else if (window.innerWidth < 768) {
                userNbrProducts.innerText = ((parseInt(cartTotalUnitCount) + phCount) > 99 ? "+99" : (parseInt(cartTotalUnitCount) + phCount));
            }

            if(isDoubleRun){
                if((parseInt(cartTotalUnitCount) + phCount) == 0){
                    userNbrProducts.style.display = 'none'
                } else {
                    userNbrProducts.style.display = 'block'
                }
            }

    }

    function isUserConnectedSwitch(status) {
        for (var i = 0; i < switchedPopin.length; i++) {
            switchedPopin[i].dataset.switchView = status;
        }
        
        if(popinInReexNotActivated === "true" && !status) {
            localStorage.removeItem('popinIgnored');
        }

    }
    if (window.showCount) {
        //showMiniCart();
        showCount();
    }
};

function checkConnexion() {
	try {
		var checkConnexionUrl = EBK.MCV3.checkConnexionUrl;
		if(checkConnexionUrl != "") {
			$.ajax({
		        url: checkConnexionUrl,
		        cache: false,
		        dataType: 'jsonp',
		        jsonpCallback: 'checkConnection',
		        success: function (result) {
		        	$.ajax({
				        url: '/getUserLightWeightData',
				        cache: false,
				        type: 'GET',
				        dataType: 'json',
				        success: function (user) {
				            //Update header info
				            updateHeaderInfo(user);
		                }
				    });
                }
		    });
		}
	}catch(e){
		console.log("Error while checking MCV3 connection : " + e);
	}
}